// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//enum
enum Embalagem {
  SACARIA
  BAG_1TN
  BAG_750KG
  LITRO
  GALAO_2L
  GALAO_5L
  GALAO_10L
  BALDE_20L
  TAMBOR_200L
  IBC_1000L
  PACOTE_1KG
  PACOTE_5KG
  PACOTE_10KG
  PACOTE_15KG
  PACOTE_500G
  OUTROS
}

enum TipoMovimentacao {
  ENTRADA
  SAIDA
  DESATIVACAO
  AJUSTE
}

//models
model Usuario {
  id           Int           @id @default(autoincrement())
  nome         String
  email        String        @unique
  firebaseUid  String        @unique
  propriedades Propriedade[]
}

model Propriedade {
  id        Int       @id @default(autoincrement())
  nome      String
  usuarioId Int
  usuario   Usuario   @relation(fields: [usuarioId], references: [id])
  estoque   Estoque[]
}

model Produto {
  id        Int       @id @default(autoincrement())
  nome      String
  embalagem Embalagem
  validade  DateTime
  estoque   Estoque[]
}

model Estoque {
  id            Int            @id @default(autoincrement())
  propriedadeId Int
  propriedade   Propriedade    @relation(fields: [propriedadeId], references: [id])
  produtoId     Int
  produto       Produto        @relation(fields: [produtoId], references: [id])
  quantidade    Int
  movimentacoes Movimentacao[]
}

model Movimentacao {
  id            Int              @id @default(autoincrement())
  estoqueId     Int
  estoque       Estoque          @relation(fields: [estoqueId], references: [id])
  tipo          TipoMovimentacao
  quantidade    Int
  data          DateTime         @default(now())
  produtoStatus String           @default("ativo")
  justificativa String?
}
